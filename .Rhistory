by_col = "name"
ftype="Gnm-Num"
data <- sample_data("Gnm-Num", 300)
opts <- dsvizopts::dsviz_defaults()
# call geographical info
shape <- dsvizopts::shape_info(map_name = opts$extra$map_name,
ftype = ftype,
by_col = by_col,
addRds = FALSE)
#topoData <- shape$rdsInfo
topoInfo <- shape$topoInfo
topoInfo$labels <- topoInfo[[by_col]]
topoInfo$name_alt
list_d <- dsvizopts::data_map_prep(data = data,
ftype = ftype,
agg =  opts$summarize$agg,
color_by = opts$style$color_by,
more_levels = shape$more_levels,
ptage_col = opts$postprocess$percentage_col)
# format setting of data being displayed
data_format <- dsvizopts::format_prep(data = list_d$data,
dic = list_d$dic,
formats = list(sample_num = opts$style$format_sample_num,
sample_cat = opts$style$format_sample_cat,
prefix = opts$style$prefix,
suffix = opts$style$suffix))
data_format$name_alt <- iconv(tolower(data_format$a), to = "ASCII//TRANSLIT")
all_data <- topoInfo %>% select(id, name, name_alt)
all_data
class(all_data)
all_data %>% as.data.frame()
all_data <- topoInfo %>% as.data.frame() %>% select(id, name, name_alt)
all_data
data_format <- all_data %>% dplyr::left_join(data_format, by = "name_alt")
View(data_format)
# add info tooltip in data
data_format <- agg_tooltip(data = data_format, label_by = opts$extra$map_label_by,nms = list_d$nms, label_ftype = list_d$nms_tooltip, tooltip = opts$chart$tooltip)
list_d$nms
opts$extra$map_label_by
data_format
agg_tooltip
all_data <- topoInfo %>% as.data.frame() %>% select(id, name, name_alt, name_alt)
data_format <- all_data %>% dplyr::left_join(data_format, by = "name_alt")
# add info tooltip in data
data_format <- agg_tooltip(data = data_format, label_by = opts$extra$map_label_by,nms = list_d$nms, label_ftype = list_d$nms_tooltip, tooltip = opts$chart$tooltip)
by_col = "name"
ftype="Gnm-Num"
opts <- dsvizopts::dsviz_defaults()
data <- sample_data("Gnm-Num", 300)
# call geographical info
shape <- dsvizopts::shape_info(map_name = opts$extra$map_name,
ftype = ftype,
by_col = by_col,
addRds = FALSE)
#topoData <- shape$rdsInfo
topoInfo <- shape$topoInfo
topoInfo$labels <- topoInfo[[by_col]]
list_d <- dsvizopts::data_map_prep(data = data,
ftype = ftype,
agg =  opts$summarize$agg,
color_by = opts$style$color_by,
more_levels = shape$more_levels,
ptage_col = opts$postprocess$percentage_col)
# format setting of data being displayed
data_format <- dsvizopts::format_prep(data = list_d$data,
dic = list_d$dic,
formats = list(sample_num = opts$style$format_sample_num,
sample_cat = opts$style$format_sample_cat,
prefix = opts$style$prefix,
suffix = opts$style$suffix))
function (x)
data_format$name_alt <- iconv(tolower(data_format$a), to = "ASCII//TRANSLIT")
all_data <- topoInfo %>% as.data.frame() %>% select(id, name, name_alt, name_alt)
all_data
all_data <- topoInfo %>% as.data.frame() %>% select(id, name, name_alt, name_label)
data_format <- all_data %>% dplyr::left_join(data_format, by = "name_alt")
# add info tooltip in data
data_format <- agg_tooltip(data = data_format, label_by = opts$extra$map_label_by,nms = list_d$nms, label_ftype = list_d$nms_tooltip, tooltip = opts$chart$tooltip)
data_format
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy =  c('name', 'a')) %>%
hc_colorAxis(minColor = "#FACFEA", maxColor = "#000000") %>%
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.point.labels;}")))
# coordinate transformation
topoInfo <- topoInfo %>% st_set_crs(3857)
shape_transform <- st_transform(topoInfo,
"+proj=mill +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R_A +datum=WGS84 +units=m +no_defs")
shape_json <- geojson_json(shape_transform)
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy =  c('name', 'a')) %>%
hc_colorAxis(minColor = "#FACFEA", maxColor = "#000000") %>%
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.point.labels;}")))
data_format$value[is.na(data_format$value)] <- NULL
data_format$value[is.na(data_format$value)] -> 0
data_format$value[is.na(data_format$value)] <- 0
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy =  c('name', 'a')) %>%
hc_colorAxis(minColor = "#FACFEA", maxColor = "#000000") %>%
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.point.labels;}")))
opts <- dsvizopts::dsviz_defaults()
data <- sample_data("Gnm-Num", 300)
names(data) <- c("a", "b")
by_col = "name"
ftype="Gnm-Num"
# call geographical info
shape <- dsvizopts::shape_info(map_name = opts$extra$map_name,
ftype = ftype,
by_col = by_col,
addRds = FALSE)
#topoData <- shape$rdsInfo
topoInfo <- shape$topoInfo
topoInfo$labels <- topoInfo[[by_col]]
list_d <- dsvizopts::data_map_prep(data = data,
ftype = ftype,
agg =  opts$summarize$agg,
color_by = opts$style$color_by,
more_levels = shape$more_levels,
ptage_col = opts$postprocess$percentage_col)
# format setting of data being displayed
data_format <- dsvizopts::format_prep(data = list_d$data,
dic = list_d$dic,
formats = list(sample_num = opts$style$format_sample_num,
sample_cat = opts$style$format_sample_cat,
prefix = opts$style$prefix,
suffix = opts$style$suffix))
data_format$name_alt <- iconv(tolower(data_format$a), to = "ASCII//TRANSLIT")
all_data <- topoInfo %>% as.data.frame() %>% select(id, name, name_alt, name_label)
data_format <- all_data %>% dplyr::left_join(data_format, by = "name_alt")
View(data_format)
# add info tooltip in data
data_format <- agg_tooltip(data = data_format, label_by = opts$extra$map_label_by,nms = list_d$nms, label_ftype = list_d$nms_tooltip, tooltip = opts$chart$tooltip)
# coordinate transformation
topoInfo <- topoInfo %>% st_set_crs(3857)
shape_transform <- st_transform(topoInfo,
"+proj=mill +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R_A +datum=WGS84 +units=m +no_defs")
shape_json <- geojson_json(shape_transform)
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy = 'name') %>%
hc_colorAxis(minColor = "#FACFEA", maxColor = "#000000") %>%
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.point.labels;}")))
data_format$value[is.na(data_format$value)] <- 0
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy = 'name') %>%
hc_colorAxis(minColor = "#FACFEA", maxColor = "#000000") %>%
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.point.labels;}")))
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy = 'name') %>%
hc_colorAxis(minColor = "#FACFEA", maxColor = "#000000") %>%
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.series.labels;}")))
devtools::load_all(".")
by_col = "name"
opts <- dsvizopts::dsviz_defaults()
data <- sample_data("Gnm-Num", 300)
ftype="Gnm-Num"
# call geographical info
shape <- dsvizprep::shape_info(map_name = opts$extra$map_name,
ftype = ftype,
by_col = by_col,
addRds = FALSE)
#topoData <- shape$rdsInfo
topoInfo <- shape$topoInfo
topoInfo$labels <- topoInfo[[by_col]]
list_d <- dsvizprep::data_map_prep(data = data,
ftype = ftype,
agg =  opts$summarize$agg,
color_by = opts$style$color_by,
more_levels = shape$more_levels,
ptage_col = opts$postprocess$percentage_col)
# format setting of data being displayed
data_format <- dsvizprep::format_prep(data = list_d$data,
dic = list_d$dic,
formats = list(sample_num = opts$style$format_sample_num,
sample_cat = opts$style$format_sample_cat,
prefix = opts$style$prefix,
suffix = opts$style$suffix))
if (grepl("Gnm|Gcd", ftype)) {
data_format$name_alt <- iconv(tolower(data_format$a), to = "ASCII//TRANSLIT")
all_data <- topoInfo %>% as.data.frame() %>% select(id, name, name_alt, name_label)
data_format <- all_data %>% dplyr::left_join(data_format, by = "name_alt")
data_format$value[is.na(data_format$value)] <- 0
# add info tooltip in data
data_format <- agg_tooltip(data = data_format, label_by = opts$extra$map_label_by,nms = list_d$nms, label_ftype = list_d$nms_tooltip, tooltip = opts$chart$tooltip)
} else {
topoInfo <- list(topoInfo = topoInfo, data = data_format)
# add info tooltip in data
topoInfo$data <- agg_tooltip(data = topoInfo$data, label_by = opts$extra$map_label_by,nms = list_d$nms, label_ftype = list_d$nms_tooltip, tooltip = opts$chart$tooltip)
}
# coordinate transformation
topoInfo <- topoInfo %>% st_set_crs(3857)
shape_transform <- st_transform(topoInfo,
"+proj=mill +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R_A +datum=WGS84 +units=m +no_defs")
shape_json <- geojson_json(shape_transform)
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
tooltip = "{point.name}")
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
tooltip = list(pointFormat = "{point.name}"))
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy = 'name',
tooltip = list(pointFormat = "{point.name}"))
data <- sample_data("Gnm-Num", 300)
opts <- dsvizopts::dsviz_defaults()
by_col = "name"
ftype="Gnm-Num"
# call geographical info
shape <- dsvizprep::shape_info(map_name = opts$extra$map_name,
ftype = ftype,
by_col = by_col,
addRds = FALSE)
#topoData <- shape$rdsInfo
topoInfo <- shape$topoInfo
topoInfo$labels <- topoInfo[[by_col]]
list_d <- dsvizprep::data_map_prep(data = data,
ftype = ftype,
agg =  opts$summarize$agg,
color_by = opts$style$color_by,
more_levels = shape$more_levels,
ptage_col = opts$postprocess$percentage_col)
# format setting of data being displayed
data_format <- dsvizprep::format_prep(data = list_d$data,
dic = list_d$dic,
formats = list(sample_num = opts$style$format_sample_num,
sample_cat = opts$style$format_sample_cat,
prefix = opts$style$prefix,
suffix = opts$style$suffix))
data_format$name_alt <- iconv(tolower(data_format$a), to = "ASCII//TRANSLIT")
all_data <- topoInfo %>% as.data.frame() %>% select(id, name, name_alt, name_label)
data_format <- all_data %>% dplyr::left_join(data_format, by = "name_alt")
# add info tooltip in data
data_format <- agg_tooltip(data = data_format, label_by = opts$extra$map_label_by,nms = list_d$nms, label_ftype = list_d$nms_tooltip, tooltip = opts$chart$tooltip)
# coordinate transformation
topoInfo <- topoInfo %>% st_set_crs(3857)
shape_transform <- st_transform(topoInfo,
"+proj=mill +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R_A +datum=WGS84 +units=m +no_defs")
shape_json <- geojson_json(shape_transform)
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy = 'name',
tooltip = list(pointFormat = "{point.name}"))
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy = 'name') %>%
hc_colorAxis(minColor = "#FACFEA", maxColor = "#000000") %>%
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.series.labels;}")))
View(data_format)
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy = 'name') %>%
hc_colorAxis(minColor = "#FACFEA", maxColor = "#000000") %>%
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.labels;}")))
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy = 'name') %>%
hc_colorAxis(minColor = "#FACFEA", maxColor = "#000000") %>%
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.point.labels;}")))
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy = 'name') %>%
hc_colorAxis(list(minColor = "#FACFEA", maxColor = "#000000"))
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy = 'name',
borderColor = opts$theme$border_color,
nullColor = opts$theme$na_color,
showInLegend = FALSE)
4500+1500+6000+11000+20000
765*2
