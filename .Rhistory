mapData = shape_json,
data = dgeo,
joinBy = "name"
) |>
hc_colors(
stops = color_stops(colors = c("green", "yellow", "orange", "red"))
)
data$value
data <- read.csv("BD mapa de riesgo - Sheet1.csv")
data <- data |> dplyr::filter(annoh == "2022",
variable == "Consolidado de riesgo",
circ == "Nacionales") |>
dplyr::select(Municipio, riesgo, codmpio)
data$value <- recode(data$riesgo,
"Sin riesgo" = 0,
"Medio (por alto nivel de la variable)" = 1,
"Alto (por alto nivel de la variable)" = 2,
"Extremo (por alto nivel de la variable)" = 3)
d <- geodato::gd_match(data, map_name)
dgeo <- tj |> left_join(d, by = c(id = "..gd_id", name = "..gd_name"))
dgeo <- dgeo %>% sf::st_set_crs(3857)
shape_transform <- sf::st_transform(dgeo,
"+proj=mill +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R_A +datum=WGS84 +units=m +no_defs")
shape_json <- geojsonio::geojson_json(shape_transform)
highchart(type = "map") |>
hc_chart( map= "topology",
spacingBottom= 20) |>
hc_add_series(
mapData = shape_json,
data = dgeo,
joinBy = "name"
) |>
hc_colors(
stops = color_stops(colors = c("green", "yellow", "orange", "red"))
)
data <- read.csv("BD mapa de riesgo - Sheet1.csv")
data <- data |> dplyr::filter(annoh == "2022",
variable == "Consolidado de riesgo",
circ == "Nacionales") |>
dplyr::select(Municipio, value = riesgo, codmpio)
d <- geodato::gd_match(data, map_name)
dgeo <- tj |> left_join(d, by = c(id = "..gd_id", name = "..gd_name"))
dgeo <- dgeo %>% sf::st_set_crs(3857)
shape_transform <- sf::st_transform(dgeo,
"+proj=mill +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R_A +datum=WGS84 +units=m +no_defs")
shape_json <- geojsonio::geojson_json(shape_transform)
highchart(type = "map") |>
highchart(type = "map") |>
hc_chart( map= "topology",
spacingBottom= 20) |>
hc_add_series(
mapData = shape_json,
data = dgeo,
joinBy = "name"
) |>
hc_colorAxis(
stops = color_stops(colors = c("green", "yellow", "orange", "red"))
)
data <- read.csv("BD mapa de riesgo - Sheet1.csv")
data <- data |> dplyr::filter(annoh == "2022",
variable == "Consolidado de riesgo",
circ == "Nacionales") |>
dplyr::select(Municipio, riesgo, codmpio)
data$value <- recode(data$riesgo,
"Sin riesgo" = 0,
"Medio (por alto nivel de la variable)" = 1,
"Alto (por alto nivel de la variable)" = 2,
"Extremo (por alto nivel de la variable)" = 3)
d <- geodato::gd_match(data, map_name)
dgeo <- tj |> left_join(d, by = c(id = "..gd_id", name = "..gd_name"))
dgeo <- dgeo %>% sf::st_set_crs(3857)
shape_transform <- sf::st_transform(dgeo,
"+proj=mill +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R_A +datum=WGS84 +units=m +no_defs")
shape_json <- geojsonio::geojson_json(shape_transform)
highchart(type = "map") |>
hc_chart( map= "topology",
spacingBottom= 20) |>
hc_add_series(
mapData = shape_json,
data = dgeo,
joinBy = "name"
) |>
hc_colorAxis(
stops = color_stops(colors = c("green", "yellow", "orange", "red"))
)
highchart(type = "map") |>
hc_add_series(
mapData = shape_json,
data = dgeo,
joinBy = "name"
) |>
hc_colorAxis(
stops = color_stops(colors = c("green", "yellow", "orange", "red"))
)
map_name <- "col_municipalities"
tj <- geodato::gd_tj(map_name)
data <- read.csv("BD mapa de riesgo - Sheet1.csv")
data <- data |> dplyr::filter(annoh == "2022",
variable == "Consolidado de riesgo",
circ == "Nacionales") |>
dplyr::select(Municipio, riesgo, codmpio)
data$value <- recode(data$riesgo,
"Sin riesgo" = 0,
"Medio (por alto nivel de la variable)" = 1,
"Alto (por alto nivel de la variable)" = 2,
"Extremo (por alto nivel de la variable)" = 3)
d <- geodato::gd_match(data, map_name)
d$label <- d$riesgo
dgeo <- tj |> left_join(d, by = c(id = "..gd_id", name = "..gd_name"))
dgeo <- dgeo %>% sf::st_set_crs(3857)
shape_transform <- sf::st_transform(dgeo,
"+proj=mill +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R_A +datum=WGS84 +units=m +no_defs")
shape_json <- geojsonio::geojson_json(shape_transform)
highchart(type = "map") |>
hc_add_series(
mapData = shape_json,
data = dgeo,
joinBy = "name"
) |>
hc_colorAxis(
stops = color_stops(colors = c("green", "yellow", "orange", "red"))
) |>
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.point.label;}")))
data <- tibble(
country =
c("PT", "IE", "GB", "IS",
"NO", "SE", "DK", "DE", "NL", "BE", "LU", "ES", "FR", "PL", "CZ", "AT",
"CH", "LI", "SK", "HU", "SI", "IT", "SM", "HR", "BA", "YF", "ME", "AL", "MK",
"FI", "EE", "LV", "LT", "BY", "UA", "MD", "RO", "BG", "GR", "TR", "CY",
"RU"),
tz = c(rep("UTC", 4), rep("UTC + 1",25), rep("UCT + 2",12), "UTC + 3")
)
# auxiliar variable
data <- data |>
mutate(value = cumsum(!duplicated(tz)))
data
# now we'll create the dataClasses
dta_clss <- data |>
mutate(value = cumsum(!duplicated(tz))) |>
group_by(tz) |>
summarise(value = unique(value)) |>
arrange(value) |>
rename(name = tz, from = value) |>
mutate(to = from + 1) |>
list_parse()
dta_clss
data <- read.csv("BD mapa de riesgo - Sheet1.csv")
data <- data |> dplyr::filter(annoh == "2022",
variable == "Consolidado de riesgo",
circ == "Nacionales") |>
dplyr::select(Municipio, riesgo, codmpio)
# data$value <- recode(data$riesgo,
#                      "Sin riesgo" = 0,
#                      "Medio (por alto nivel de la variable)" = 1,
#                      "Alto (por alto nivel de la variable)" = 2,
#                      "Extremo (por alto nivel de la variable)" = 3)
#
data <- data |>
mutate(value = cumsum(!duplicated(riesgo)))
data
View(data)
data$value <- recode(data$riesgo,
"Sin riesgo" = 0,
"Medio (por alto nivel de la variable)" = 1,
"Alto (por alto nivel de la variable)" = 2,
"Extremo (por alto nivel de la variable)" = 3)
d <- geodato::gd_match(data, map_name)
d$label <- d$riesgo
dgeo <- tj |> left_join(d, by = c(id = "..gd_id", name = "..gd_name"))
dgeo <- dgeo %>% sf::st_set_crs(3857)
shape_transform <- sf::st_transform(dgeo,
"+proj=mill +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R_A +datum=WGS84 +units=m +no_defs")
dta_clss <- data |>
mutate(value = value) |>
group_by(riesgo) |>
summarise(value = unique(value)) |>
arrange(value) |>
rename(name = riesgo, from = value) |>
mutate(to = from + 1) |>
list_parse()
dta_clss
highchart(type = "map") |>
hc_add_series(
mapData = shape_json,
data = dgeo,
joinBy = "name"
) |>
hc_colorAxis(
stops = color_stops(colors = c("green", "yellow", "orange", "red")),
dataClassColor = "category",
dataClasses = dta_clss
) |>
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.point.label;}")))
highchart(type = "map") |>
hc_add_series(
mapData = shape_json,
data = dgeo,
joinBy = "name"
) |>
hc_colorAxis(
#stops = color_stops(colors = c("green", "yellow", "orange", "red")),
dataClassColor = "category",
dataClasses = dta_clss
) |>
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.point.label;}")))
?hc_colorAxis
library(highcharter)
library(geodato)
library(dplyr)
map_name <- "col_municipalities"
tj <- geodato::gd_tj(map_name)
data <- read.csv("BD mapa de riesgo - Sheet1.csv")
data <- data |> dplyr::filter(annoh == "2022",
variable == "Consolidado de riesgo",
circ == "Nacionales") |>
dplyr::select(Municipio, riesgo, codmpio)
data$value <- recode(data$riesgo,
"Sin riesgo" = 0,
"Medio (por alto nivel de la variable)" = 1,
"Alto (por alto nivel de la variable)" = 2,
"Extremo (por alto nivel de la variable)" = 3)
data$color <- recode(data$riesgo,
"Sin riesgo" = "green",
"Medio (por alto nivel de la variable)" = "yellow",
"Alto (por alto nivel de la variable)" = "orange",
"Extremo (por alto nivel de la variable)" = "red")
# data <- data |>
#   mutate(value = cumsum(!duplicated(riesgo)))
d <- geodato::gd_match(data, map_name)
d$label <- d$riesgo
dgeo <- tj |> left_join(d, by = c(id = "..gd_id", name = "..gd_name"))
dgeo <- dgeo %>% sf::st_set_crs(3857)
shape_transform <- sf::st_transform(dgeo,
"+proj=mill +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R_A +datum=WGS84 +units=m +no_defs")
shape_json <- geojsonio::geojson_json(shape_transform)
dta_clss <- data |>
mutate(value = value) |>
group_by(riesgo) |>
summarise(value = unique(value)) |>
arrange(value) |>
rename(name = riesgo, from = value) |>
mutate(to = from + 1) |>
list_parse()
highchart(type = "map") |>
hc_add_series(
mapData = shape_json,
data = dgeo,
joinBy = "name"
) |>
hc_colorAxis(
#stops = color_stops(colors = c("green", "yellow", "orange", "red")),
dataClassColor = "category",
dataClasses = dta_clss
) |>
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.point.label;}")))
dta_clss
map_name <- "col_municipalities"
tj <- geodato::gd_tj(map_name)
data <- read.csv("BD mapa de riesgo - Sheet1.csv")
data <- data |> dplyr::filter(annoh == "2022",
variable == "Consolidado de riesgo",
circ == "Nacionales") |>
dplyr::select(Municipio, riesgo, codmpio)
data$value <- recode(data$riesgo,
"Sin riesgo" = 0,
"Medio (por alto nivel de la variable)" = 1,
"Alto (por alto nivel de la variable)" = 2,
"Extremo (por alto nivel de la variable)" = 3)
data$color <- recode(data$riesgo,
"Sin riesgo" = "green",
"Medio (por alto nivel de la variable)" = "yellow",
"Alto (por alto nivel de la variable)" = "orange",
"Extremo (por alto nivel de la variable)" = "red")
# data <- data |>
#   mutate(value = cumsum(!duplicated(riesgo)))
d <- geodato::gd_match(data, map_name)
d$label <- d$riesgo
dgeo <- tj |> left_join(d, by = c(id = "..gd_id", name = "..gd_name"))
dgeo <- dgeo %>% sf::st_set_crs(3857)
shape_transform <- sf::st_transform(dgeo,
"+proj=mill +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R_A +datum=WGS84 +units=m +no_defs")
shape_json <- geojsonio::geojson_json(shape_transform)
data |>
mutate(value = value)
data |>
mutate(value = value) |>
group_by(riesgo) |>
summarise(value = unique(value))
data |>
mutate(value = value) |>
group_by(riesgo) |>
summarise(value = unique(value), color = unique(color)) |>
arrange(value)
data |>
mutate(value = value) |>
group_by(riesgo) |>
summarise(value = unique(value), color = unique(color)) |>
arrange(value) |>
rename(name = riesgo, from = value)
data |>
mutate(value = value) |>
group_by(riesgo) |>
summarise(value = unique(value), color = unique(color)) |>
arrange(value) |>
rename(name = riesgo, from = value) |>
mutate(to = from + 1)
dta_clss <- data |>
mutate(value = value) |>
group_by(riesgo) |>
summarise(value = unique(value), color = unique(color)) |>
arrange(value) |>
rename(name = riesgo, from = value) |>
mutate(to = from + 1) |>
list_parse()
highchart(type = "map") |>
hc_add_series(
mapData = shape_json,
data = dgeo,
joinBy = "name"
) |>
hc_colorAxis(
#stops = color_stops(colors = c("green", "yellow", "orange", "red")),
dataClassColor = "category",
dataClasses = dta_clss
) |>
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.point.label;}")))
dsopts::dsopt_default()
dsopts::dsopt_default
dsopts::dsopts_default()
dsopts::dsopts_default(categories = "tooltip")
opts <- dsopts::dsopts_default()
dsdataprep::data_map_draw
dsopts_filter_categories("format")
dsopts::dsopt_default("format")
dsopts::dsopt_default("tooltip")
dsopts::dsopts_default(categories = "format")
dsopts::dsopts_default(categories = "format_sample")
devtools::load_all(".")
usethis::use_test("choropleth")
devtools::load_all(".")
data <- data.frame(pais = c("Colombia", "Argentina", "Russia"), value = c(10, 20, 30))
data <- data.frame(pais = c("Colombia", "Argentina", "Russia"), value = c(10, 20, 30))
hgch_choropleth(data, "value", map_name = "col_departments")
dsdataprep::data_map_draw
devtools::load_all(".")
data <- data.frame(pais = c("Colombia", "Argentina", "Russia"), value = c(10, 20, 30))
hgch_choropleth(data, "value", map_name = "col_departments")
devtools::load_all(".")
hgch_choropleth(data, "value", map_name = "col_departments")
if (is.na(opts$tooltip_template)) opts$tooltip_template <- NULL
list(
map_name = opts$map_name,
tooltip_template = opts$tooltip_template,
format_sample_cat = opts$format_sample_cat,
format_sample_num = opts$format_sample_num,
format_sample_dat = opts$format_sample_dat,
na_label = opts$na_label
)
devtools::load_all(".")
hgch_choropleth(data, "value", map_name = "col_departments")
devtools::load_all(".")
hgch_choropleth(data, "value", map_name = "col_departments")
View(opts)
View(data)
data <- data.frame(pais = c("Colombia", "Argentina", "Russia"), value = c(10, 20, 30))
hgch_choropleth(data, "value")
?sf::st_set_crs
devtools::load_all(".")
hgch_choropleth(data, "value")
devtools::load_all(".")
hgch_choropleth(data, "value")
View(data)
data |> rename(name =: "pais")
x <- "pais"
data |> rename(name = !!sym(x))
"a" %in% c("a", "b")
opts$palette_colors
opts$color_palette_sequential
devtools::load_all(".")
data <- data.frame(pais = c("Colombia", "Argentina", "Russia"), value = c(10, 20, 30))
hgch_choropleth(data, "value")
hcgh_color
devtools::load_all(".")
hgch_choropleth(data, "value")
devtools::load_all(".")
hgch_choropleth(data, "value")
devtools::load_all(".")
devtools::load_all(".")
hgch_choropleth(data, "value")
devtools::load_all(".")
devtools::load_all(".")
hgch_choropleth(data, "value")
devtools::load_all(".")
hgch_choropleth(data, "value")
devtools::load_all(".")
hgch_choropleth(data, "value")
devtools::load_all(".")
hgch_choropleth(data, "value")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all(".")
devtools::load_all(".")
data <- data.frame(pais = c("Colombia", "Argentina", "Russia"), value = c(10, 20, 30))
hgch_choropleth(data, "value")
hgch_choropleth
devtools::load_all(".")
hgch_choropleth(data, "value")
hcgh_color
devtools::load_all(".")
hgch_choropleth(data, "value")
opts <- dsopts::dsopt_default()
opts <- dsopts::dsopts_default()
devtools::load_all(".")
data <- data.frame(pais = c("Colombia", "Argentina", "Russia"), value = c(10, 20, 30))
hgch_choropleth(data, "value")
opts$color_bins_manual
opts$color_palette_categorical
split(opts$color_palette_sequential, sep = ",")
strsplit(opts$color_palette_sequential, split = ",")
devtools::load_all(".")
data <- data.frame(pais = c("Colombia", "Argentina", "Russia"), value = c(10, 20, 30))
hgch_choropleth(data, "value")
devtools::load_all(".")
hgch_choropleth(data, "value")
devtools::load_all(".")
hgch_choropleth(data, "value")
devtools::load_all(".")
hgch_choropleth(data, "value")
devtools::load_all(".")
hgch_choropleth(data, "value")
devtools::load_all(".")
hgch_choropleth(data, "value")
data <- data.frame(pais = c("Colombia", "Argentina", "Russia"),
riesgo = c("bajo", "medio", "alto"), color = c("green", "yellow", "orange"))
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
data <- data.frame(pais = c("Colombia", "Argentina", "Russia"),
riesgo = c("bajo", "medio", "alto"),
...colors = c("green", "yellow", "orange"))
hgch_choropleth(data, "riesgo")
data <- data.frame(pais = c("Colombia", "Argentina", "Russia"),
riesgo = c("bajo", "medio", "alto"),
..colors = c("green", "yellow", "orange"))
hgch_choropleth(data, "riesgo")
hgchmagic:::data_draw
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
hgch_choropleth(data, "riesgo")
devtools::install_github("datasketch/dsopts")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
data <- data.frame(pais = c("Colombia", "Argentina", "Russia"), value = c(10, 20, 30))
hgch_choropleth(data, "value")
data <- data.frame(pais = c("Colombia", "Argentina", "Russia"),
riesgo = c("bajo", "medio", "alto"),
..colors = c("green", "yellow", "orange"))
hgch_choropleth(data, "riesgo")
hgchmagic:::dataprep_opts
hgchmagic:::data_draw
devtools::load_all(".")
data <- data.frame(pais = c("Colombia", "Argentina", "Russia"),
riesgo = c("bajo", "medio", "alto"),
`_colors` = c("green", "yellow", "orange"))
hgch_choropleth(data, "riesgo")
devtools::load_all(".")
data <- data.frame(pais = c("Colombia", "Argentina", "Russia"),
riesgo = c("bajo", "medio", "alto"),
color = c("green", "yellow", "orange"))
hgch_choropleth(data, "riesgo")
devtools::load_all()
devtools::document()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
