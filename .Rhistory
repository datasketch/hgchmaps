df <- sample_data("Gnm-Cat-Num")
data = df
ftype = "Gnm"
agg= "sum"
ptage_col = NULL
opts <- dsvizopts::dsviz_defaults()
by_col = "name"
# call geopgraphical info
shape <- shape_info(map_name = opts$extra$map_name, ftype = ftype, by_col = by_col)
# data preparation by type
list_d <- data_prep(data = data,
ftype = ftype,
agg =  opts$summarize$agg,
ptage_col = opts$postprocess$percentage_col)
# format setting of data being displayed
data_format <- format_prep(data = list_d$data,
dic = list_d$dic,
formats = list(sample_num = opts$style$format_sample_num,
sample_cat = opts$style$format_sample_cat))
list_d$data
list_d$dic
devtools::load_all(".")
# data preparation by type
list_d <- data_prep(data = data,
ftype = ftype,
agg =  opts$summarize$agg,
ptage_col = opts$postprocess$percentage_col)
list_d
# format setting of data being displayed
data_format <- format_prep(data = list_d$data,
dic = list_d$dic,
formats = list(sample_num = opts$style$format_sample_num,
sample_cat = opts$style$format_sample_cat))
data_format
devtools::load_all(".")
# format setting of data being displayed
data_format <- format_prep(data = list_d$data,
dic = list_d$dic,
formats = list(sample_num = opts$style$format_sample_num,
sample_cat = opts$style$format_sample_cat))
data_format
?st_transform
data <- sample_data("Gnm")
f <- homodatum::fringe(data)
dic <- f$dic
dic
format_prep(data, dic, formats = list(sample_cat = "SAMPLE"))
format_prep
devtools::load_all(".")
data <- sample_data("Gnm")
f <- homodatum::fringe(data)
dic <- f$dic
format_prep(data, dic, formats = list(sample_cat = "SAMPLE"))
devtools::load_all(".")
data <- sample_data("Gnm")
f <- homodatum::fringe(data)
dic <- f$dic
format_prep(data, dic, formats = list(sample_cat = "SAMPLE"))
devtools::load_all(".")
format_prep(data, dic, formats = list(sample_cat = "SAMPLE"))
devtools::load_all(".")
format_prep(data, dic, formats = list(sample_cat = "SAMPLE"))
devtools::load_all(".")
format_prep(data, dic, formats = list(sample_cat = "SAMPLE"))
devtools::load_all(".")
format_prep(data, dic, formats = list(sample_cat = "SAMPLE"))
data <- sample_data("Gnm")
f <- homodatum::fringe(data)
dic <- f$dic
names(data) <- dic$id
format_prep(data, dic, formats = list(sample_cat = "SAMPLE"))
names(out)
out <- format_prep(data, dic, formats = list(sample_cat = "SAMPLE"))
names(out)
names(data)
expect_equal(names(out), c(names(data), paste0(names(data), "_label")))
toupper(data$quis_gnm)
expect_equal(out$quis_gnm_label, toupper(data$quis_gnm))
expect_identical(out$quis_gnm_label, toupper(data$quis_gnm))
expect_identical(out$quis_gnm_label, toupper(data$quis_gnm))
out$quis_gnm_label
toupper(data$quis_gnm)
as.character(toupper(data$quis_gnm))
expect_identical(out$quis_gnm_label, as.character(toupper(data$quis_gnm)))
devtools::load_all(".")
label_by <- opts$extra$map_label_by
opts <- dsvizopts::dsviz_defaults()
label_by <- opts$extra$map_label_by
data <- sample_data("Gnm-Num", 300)
ftype="Gnm-Num"
by_col = "name"
df <- sample_data("Gnm-Cat-Num")
ftype = "Gnm"
data = df
agg= "sum"
ptage_col = NULL
# call geopgraphical info
shape <- shape_info(map_name = opts$extra$map_name, ftype = ftype, by_col = by_col)
# data preparation by type
list_d <- data_prep(data = data,
ftype = ftype,
agg =  opts$summarize$agg,
ptage_col = opts$postprocess$percentage_col)
# format setting of data being displayed
data_format <- format_prep(data = list_d$data,
dic = list_d$dic,
formats = list(sample_num = opts$style$format_sample_num,
sample_cat = opts$style$format_sample_cat))
devtools::load_all(".")
# data preparation by type
list_d <- data_prep(data = data,
ftype = ftype,
agg =  opts$summarize$agg,
ptage_col = opts$postprocess$percentage_col)
list_d$nms_tooltip
opts$chart$tooltip
hgch_tooltip(nms = list_d$nms,
label_ftype = list_d$nms_tooltip,
tooltip = opts$chart$tooltip)
devtools::load_all(".")
# data preparation by type
list_d <- data_prep(data = data,
ftype = ftype,
agg =  opts$summarize$agg,
ptage_col = opts$postprocess$percentage_col)
list_d$nms_tooltip
hgch_tooltip(nms = list_d$nms,
label_ftype = list_d$nms_tooltip,
tooltip = opts$chart$tooltip)
data_format <- data_format %>%
dplyr::mutate(labels = glue::glue(
hgch_tooltip(nms = list_d$nms,
label_ftype = list_d$nms_tooltip,
tooltip = opts$chart$tooltip)) %>%
lapply(htmltools::HTML))
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy =  c('name', 'a')) %>%
hc_colorAxis(minColor = "#FACFEA", maxColor = "#000000")
# coordinate transformation
shape_transform <- st_transform(shape ,
"+proj=mill +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R_A +datum=WGS84 +units=m +no_defs")
shape_json <- geojson_json(shape_transform)
function (hc_opts = list(), theme = getOption("highcharter.theme"),
type = "chart", width = NULL, height = NULL, elementId = NULL,
google_fonts = getOption("highcharter.google_fonts"))
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy =  c('name', 'a')) %>%
hc_colorAxis(minColor = "#FACFEA", maxColor = "#000000")
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy =  c('name', 'a')) %>%
hc_colorAxis(minColor = "#FACFEA", maxColor = "#000000") %>%
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.point.label;}")))
data_format
View(data_format)
highchart(type = "map") %>%
hc_add_series(mapData =  shape_json,
data = data_format,
joinBy =  c('name', 'a')) %>%
hc_colorAxis(minColor = "#FACFEA", maxColor = "#000000") %>%
hc_tooltip(useHTML = TRUE,
formatter = JS(paste0("function () {return this.point.labels;}")))
